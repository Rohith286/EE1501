$date
	Mon Apr 21 12:36:43 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module A2_1_tb $end
$var integer 32 ! i [31:0] $end
$scope module dut $end
$scope begin $ivl_for_loop0 $end
$var integer 32 " i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 # j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module A2_1_tb $end
$scope module dut $end
$scope begin $ivl_for_loop0 $end
$scope begin $ivl_for_loop1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 $ \x[0] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 % \h[0] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 & \x[1] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 ' \h[1] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 ( \x[2] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 ) \h[2] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 * \x[3] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 + \h[3] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 , \x[4] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 - \h[4] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 . \x[5] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 / \h[5] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 0 \x[6] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 1 \h[6] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 2 \x[7] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 3 \h[7] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 4 \y[0] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 5 \y[1] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 6 \y[2] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 7 \y[3] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 8 \y[4] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 9 \y[5] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 : \y[6] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 ; \y[7] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 < \y[8] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 = \y[9] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 > \y[10] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 ? \y[11] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 @ \y[12] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 A \y[13] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 B \y[14] [3:0] $end
$upscope $end
$scope module A2_1_tb $end
$var reg 4 C \y[15] [3:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b100 :
b111 9
b1001 8
b1010 7
b110 6
b11 5
b1 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b1 +
b100 *
b1 )
b11 (
b1 '
b10 &
b1 %
b1 $
b1000 #
b10000 "
b10000 !
$end
#1
b10000 !
#11
b0 :
b0 9
b0 8
b110 7
b111 6
b1000 5
b1000 #
b1001 4
b10000 "
b0 3
b0 1
b0 /
b0 -
b110 +
b111 )
b1000 '
b1001 %
b0 2
b0 0
b0 .
b0 ,
b0 *
b0 (
b0 &
b1 $
#12
b10000 !
#22
b1 B
b10 A
b11 @
b100 ?
b101 >
b110 =
b111 <
b1000 ;
b111 :
b110 9
b101 8
b100 7
b11 6
b10 5
b1000 #
b1 4
b10000 "
b1 3
b1 1
b1 /
b1 -
b1 +
b1 )
b1 '
b1 %
b1 2
b1 0
b1 .
b1 ,
b1 *
b1 (
b1 &
b1 $
#23
b10000 !
#33
